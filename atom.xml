<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>A little bird on coding</title>
  <subtitle>A little front-end desinger say little things</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-16T10:15:31.313Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>577</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>用 CSS 刻一隻白頭翁</title>
    <link href="http://yoursite.com/2016/09/04/CSS-chinese-bulbul/"/>
    <id>http://yoursite.com/2016/09/04/CSS-chinese-bulbul/</id>
    <published>2016-09-04T14:33:58.000Z</published>
    <updated>2016-11-16T10:15:31.313Z</updated>
    
    <content type="html"><![CDATA[<p>身為一個前端工程師，一定要用網頁來刻一下愛鳥啦～</p>
<p></p><p data-height="710" data-theme-id="0" data-slug-hash="BzZYJN" data-default-tab="result" data-user="thisis577" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thisis577/pen/BzZYJN/" target="_blank" rel="external">Playing with Chinese bulbul</a> by 577 (<a href="http://codepen.io/thisis577" target="_blank" rel="external">@thisis577</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<a id="more"></a>
<p>其實用到的新技巧不多，大概就是</p>
<ol>
<li><p>稍微摸熟 <code>border-radius</code></p>
<ul>
<li><p><code>border-radius: 左上 右上 右下 左下</code> 原本我也搞不清楚順序，但～熟能生巧，寫多了就記住了！（一隻鳥到底用了多少）其實就是順時針繞一圈XD</p>
</li>
<li><p>不規則形狀(嘴喙/頭毛/腮紅/翅膀羽毛/身體形狀/腳爪)：每個屬性設置不同數值即可。 也可利用 <code>%</code> 來設置，很方便。</p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 尾羽範例</span></div><div class="line"><span class="selector-class">.feathers</span></div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">0</span> <span class="number">60%</span> <span class="number">120%</span> <span class="number">20%</span></div></pre></td></tr></table></figure>
</li>
<li><p>橢圓(影子)： 使用 <code>/</code> 的寫法，參考自 <a href="http://www.books.com.tw/products/0010702536" target="_blank" rel="external">CSS Secrets</a></p>
<figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 影子</span></div><div class="line"><span class="selector-class">.shadow</span></div><div class="line">	<span class="attribute">border-radius</span>: <span class="number">15em</span> /<span class="number">3em</span></div></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p><code>animation</code> 應用<br> 因為大多是使用 <code>transform</code> 來達到動畫效果，因此    要套用 <code>animation</code> 的元素最好本身不要有用到 <code>transform</code>，這樣子在進行動畫時比較不會出現 bug（遇到在 Edge 上會怪異扭動+飄移的靈異現象XD），也不需要重新複製好長一段 <code>transform</code> QQ (為什麼多種不同類型的 <code>transform</code> 不會一起套用而是蓋掉呢…好不方便喔QQ)</p>
 <div class="tip"><br> 2016/09/06 補充:<br> 學到新屬性–<code>animation-play-state</code>，可以讓設定讓動畫暫停！<br> 直接把動畫寫在元素本身並設定暫停(<code>pause</code>)，觸發時再設定為 <code>running</code> 即可。<br> <figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.head</span></div><div class="line">	<span class="attribute">animation</span>: nod .<span class="number">2s</span> infinite alternate pause</div><div class="line">	&amp;.is-active</div><div class="line">		animation-play-state: running</div></pre></td></tr></table></figure><br><br> </div>
</li>
<li><p>基本漸層 <code>linear-gradient</code> 應用<br> 只有菜菜的一個方向+兩個顏色，感覺尾巴那邊緣亮色的部分應該可以用漸層去做出來而不是無止境的加 <code>::before</code> <code>::after</code></p>
</li>
</ol>
<p>因為是刻爽的，所以只測了 Chrome / Edge 可以正常顯示（Edge 沒有跑版讓我好訝異啊），數值也都抓得很隨意沒有統整，<code>position: absolute</code> 還被我濫用的很徹底XDD 用了大量重複的元素，寫完以後完全不敢回頭整理 code…而且有點後悔沒用 SVG ，可以直接輸出成圖檔的說~~（不過圖檔用畫得好像更快，還是不要浪費那個美國時間好了…）</p>
<p>希望有機會生出正面XD</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;身為一個前端工程師，一定要用網頁來刻一下愛鳥啦～&lt;/p&gt;
&lt;p&gt;&lt;p data-height=&quot;710&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;BzZYJN&quot; data-default-tab=&quot;result&quot; data-user=&quot;thisis577&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/thisis577/pen/BzZYJN/&quot;&gt;Playing with Chinese bulbul&lt;/a&gt; by 577 (&lt;a href=&quot;http://codepen.io/thisis577&quot;&gt;@thisis577&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;script async src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="practice" scheme="http://yoursite.com/tags/practice/"/>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>Sublime 設定</title>
    <link href="http://yoursite.com/2016/08/08/sublime-setting/"/>
    <id>http://yoursite.com/2016/08/08/sublime-setting/</id>
    <published>2016-08-08T09:43:23.000Z</published>
    <updated>2016-08-08T09:57:00.270Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初始設定"><a href="#初始設定" class="headerlink" title="初始設定"></a>初始設定</h2><ol>
<li>安裝 <a href="https://packagecontrol.io/installation" target="_blank" rel="external">Package control</a></li>
<li>改色系(?<br>Color scheme - Peacock</li>
<li><p>設定 line ending</p>
<figure class="highlight"><figcaption><span>Preference > Setting-Users</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">"default_line_ending": "unix"</div></pre></td></tr></table></figure>
</li>
<li><p>去除空白字元</p>
</li>
<li>Emmet (for html autocomplete)</li>
</ol>
<h2 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h2><figure class="highlight json"><figcaption><span>Preferences.sublime-settings</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"color_scheme"</span>: <span class="string">"Packages/Colorsublime - Themes/Peacock.tmTheme"</span>,</div><div class="line">    <span class="attr">"default_line_ending"</span>: <span class="string">"unix"</span>,</div><div class="line">    <span class="attr">"font_size"</span>: <span class="number">12</span>,</div><div class="line">    <span class="attr">"ignored_packages"</span>:</div><div class="line">    [</div><div class="line">        <span class="string">"Vintage"</span></div><div class="line">    ],</div><div class="line">    <span class="attr">"trim_trailing_white_space_on_save"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="空格轉tab"><a href="#空格轉tab" class="headerlink" title="空格轉tab"></a>空格轉tab</h2><p><code>Ctrl+alt+P</code> &gt; 輸入 indent &gt; 選擇 Covert to tab</p>
<h2 id="檢視安裝清單"><a href="#檢視安裝清單" class="headerlink" title="檢視安裝清單"></a>檢視安裝清單</h2><p>用 package control 搜 package list 可以看到安裝清單</p>
<h2 id="移除套件"><a href="#移除套件" class="headerlink" title="移除套件"></a>移除套件</h2><p><code>Ctrl+shift+p</code> 搜尋 remove package<br>就可以找到一個類別<br>點進去以後會列出所有裝過的package<br>就可以選擇要砍的package了~</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;初始設定&quot;&gt;&lt;a href=&quot;#初始設定&quot; class=&quot;headerlink&quot; title=&quot;初始設定&quot;&gt;&lt;/a&gt;初始設定&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;安裝 &lt;a href=&quot;https://packagecontrol.io/installation&quot; targ
    
    </summary>
    
    
      <category term="sublime" scheme="http://yoursite.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>Mail 模版限制</title>
    <link href="http://yoursite.com/2016/08/08/mail-template-html/"/>
    <id>http://yoursite.com/2016/08/08/mail-template-html/</id>
    <published>2016-08-08T09:23:42.000Z</published>
    <updated>2016-08-08T09:37:54.084Z</updated>
    
    <content type="html"><![CDATA[<h2 id="郵箱只吃寫在-html-tag-裡面的-inline-style"><a href="#郵箱只吃寫在-html-tag-裡面的-inline-style" class="headerlink" title="郵箱只吃寫在 html tag 裡面的 inline style"></a>郵箱只吃寫在 html tag 裡面的 inline style</h2><p>所以寫完以後需要先轉 inline 再寄出，使用 <a href="https://github.com/tijsverkoyen/CssToInlineStyles/" target="_blank" rel="external">CssToInlineStyles</a> 這套可以把 css 轉為 inline style。</p>
<a id="more"></a>
<h2 id="各家-mail-server-對-CSS-的限制可參考：The-Ultimate-Guide-to-CSS"><a href="#各家-mail-server-對-CSS-的限制可參考：The-Ultimate-Guide-to-CSS" class="headerlink" title="各家 mail server 對 CSS 的限制可參考：The Ultimate Guide to CSS"></a>各家 mail server 對 CSS 的限制可參考：<a href="https://www.campaignmonitor.com/css/" target="_blank" rel="external">The Ultimate Guide to CSS</a></h2><p>不吃：</p>
<ul>
<li>html5 有語意之 tag</li>
<li>Box-shadow</li>
<li>任何有透明度之屬性</li>
</ul>
<p>建議：</p>
<ul>
<li>要有高度：使用 <code>line-height</code></li>
<li>不要用 <code>&lt;p&gt;</code></li>
<li>用 <code>border</code> 取代 <code>padding</code></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;郵箱只吃寫在-html-tag-裡面的-inline-style&quot;&gt;&lt;a href=&quot;#郵箱只吃寫在-html-tag-裡面的-inline-style&quot; class=&quot;headerlink&quot; title=&quot;郵箱只吃寫在 html tag 裡面的 inline style&quot;&gt;&lt;/a&gt;郵箱只吃寫在 html tag 裡面的 inline style&lt;/h2&gt;&lt;p&gt;所以寫完以後需要先轉 inline 再寄出，使用 &lt;a href=&quot;https://github.com/tijsverkoyen/CssToInlineStyles/&quot;&gt;CssToInlineStyles&lt;/a&gt; 這套可以把 css 轉為 inline style。&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
      <category term="mail" scheme="http://yoursite.com/tags/mail/"/>
    
  </entry>
  
  <entry>
    <title>Mobile 開發時遇到的一些問題整理</title>
    <link href="http://yoursite.com/2016/08/08/mobile-develop-note/"/>
    <id>http://yoursite.com/2016/08/08/mobile-develop-note/</id>
    <published>2016-08-08T08:53:41.000Z</published>
    <updated>2016-11-16T10:15:31.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iOS-的毛"><a href="#iOS-的毛" class="headerlink" title="iOS 的毛"></a>iOS 的毛</h2><ul>
<li>要送 <code>click</code> 的對象應該設定 <code>cursor: pointer</code> 才會動（不然會無法點擊）<ul>
<li><strong>可解決手機上 click delay 300ms 的問題</strong></li>
</ul>
</li>
</ul>
<a id="more"></a>
<ul>
<li>iOS scrolling not smooth  <figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">Html</span>,<span class="selector-tag">body</span> &#123; <span class="attribute">height</span>: <span class="number">100vh</span>; &#125;</div><div class="line">* &#123; <span class="attribute">-webkit-overflow-scrolling</span>: touch &#125;  <span class="comment">/* set this to ensure scrolling smooth!! */</span></div></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="Android-鍵盤出現時把高度壓縮造成版跑掉"><a href="#Android-鍵盤出現時把高度壓縮造成版跑掉" class="headerlink" title="Android 鍵盤出現時把高度壓縮造成版跑掉"></a>Android 鍵盤出現時把高度壓縮造成版跑掉</h2><p>用改寫viewport的方法: <a href="http://stackoverflow.com/questions/8556933/screen-styling-when-virtual-keyboard-is-active" target="_blank" rel="external">screen styling when virtual keyboard is active</a></p>
<div class="tip"><br><strong>2016/09 補充</strong>：<br>因為鍵盤通常只會在 input foucs 的時候出現，所以改用判斷 focus 出現時去重設高度來解決這個問題<br><br><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Avoding keyboard affect window height</span></div><div class="line"><span class="keyword">if</span>(isMobile()) &#123;</div><div class="line">	<span class="keyword">var</span> windowHeight = $(<span class="built_in">window</span>).height();</div><div class="line">	$(<span class="string">'input'</span>).focus(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		$(<span class="string">'html'</span>).height(windowHeight);</div><div class="line">	&#125;);</div><div class="line">	$(<span class="string">'input'</span>).blur(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="comment">// wait 200ms for keyboard remove</span></div><div class="line">		setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">			$(<span class="string">'html'</span>).height(<span class="string">'100%'</span>);</div><div class="line">		&#125;, <span class="number">200</span>);</div><div class="line">	&#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><br></div>

<h2 id="input-預設-style-移除"><a href="#input-預設-style-移除" class="headerlink" title="input 預設 style 移除"></a>input 預設 style 移除</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="text"]</span></div><div class="line">    +appearance(<span class="attribute">none</span>) <span class="comment">/* Remove iOS default shadow */</span></div></pre></td></tr></table></figure>
<h2 id="手機觸碰的-delay-NEVER-DO-THIS"><a href="#手機觸碰的-delay-NEVER-DO-THIS" class="headerlink" title="手機觸碰的 delay - NEVER DO THIS!!"></a>手機觸碰的 delay - NEVER DO THIS!!</h2><p>在 iOS 上會先吃 <code>touchstart</code> 再吃 <code>click</code>，一般只綁 click 的話會造成在 iOS 上有延遲感，點擊下去會 delay 一下才有反應。問估狗大師的話通常會出現以下解法：</p>
<figure class="highlight js"><figcaption><span>script.js</span><a href="http://stackoverflow.com/questions/7018919/how-to-bind-touchstart-and-click-events-but-not-respond-to-both" target="_blank" rel="external">How to bind 'touchstart' and 'click' events but not respond to both?</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Mobile click &amp; touch event</span></div><div class="line">$(<span class="string">'#buttonId'</span>).on(<span class="string">'touchstart click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">    e.stopPropagation(); e.preventDefault();</div><div class="line">    <span class="comment">// your code here</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>但我忘記在哪裡看到評論說 <strong>不要這樣做</strong> 比較好，具體原因我忘記了…OTZ</p>
<p>目前找到的替代方案是 <strong>用 <a href="https://github.com/ftlabs/fastclick" target="_blank" rel="external">FastClick</a> 這個套件</strong> 來解決，他可以消除在手機上觸碰的 300ms delay。但這個套件在 bower 上好像很久沒有更新了…嘛，在有更好的辦法之前先這麼頂著吧ˊ_&gt;ˋ</p>
<div class="tip"><br><strong>2016/09補充：</strong> 在需要點擊的元件套上 <code>cursor: pointer</code> 可解決此問題<br></div>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iOS-的毛&quot;&gt;&lt;a href=&quot;#iOS-的毛&quot; class=&quot;headerlink&quot; title=&quot;iOS 的毛&quot;&gt;&lt;/a&gt;iOS 的毛&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;要送 &lt;code&gt;click&lt;/code&gt; 的對象應該設定 &lt;code&gt;cursor: pointer&lt;/code&gt; 才會動（不然會無法點擊）&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;可解決手機上 click delay 300ms 的問題&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="mobile" scheme="http://yoursite.com/tags/mobile/"/>
    
  </entry>
  
  <entry>
    <title>CSS 筆記</title>
    <link href="http://yoursite.com/2016/08/08/CSS-note/"/>
    <id>http://yoursite.com/2016/08/08/CSS-note/</id>
    <published>2016-08-08T08:30:30.000Z</published>
    <updated>2016-08-09T08:08:47.627Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flex-真是個好東西"><a href="#Flex-真是個好東西" class="headerlink" title="Flex 真是個好東西"></a>Flex 真是個好東西</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">display</span>: flex; <span class="comment">// 用flex方式顯示</span></div><div class="line"><span class="attribute">flex-direction</span>: column; <span class="comment">// 排列方向, column垂直排, row為水平</span></div><div class="line"><span class="attribute">flex-basis</span>: auto; <span class="comment">// 初始的 size</span></div><div class="line"><span class="attribute">flex</span>: <span class="number">1</span>;  <span class="comment">// 設定佔滿空間的比例, 若同階層兩元件一為2一為3則分別佔2/5與3/5的空間</span></div><div class="line">          <span class="comment">// 若只有自己的話會把剩餘的空間佔滿, 用在垂直方向則可以把其後方元件推到最底部</span></div><div class="line">          <span class="comment">// flex-grow + flex-shrink + flex-basis 的濃縮寫法</span></div><div class="line"><span class="attribute">order</span>: <span class="number">1</span>; <span class="comment">// flex元件的排列順序, 照數字大小排</span></div></pre></td></tr></table></figure>
<p>實作參考：<a href="http://webdesign.tutsplus.com/tutorials/how-to-build-a-news-website-layout-with-flexbox--cms-26611" target="_blank" rel="external">How to Build a News Website Layout with Flexbox</a></p>
<a id="more"></a>
<h2 id="在-CSS-中使用-Material-Icons"><a href="#在-CSS-中使用-Material-Icons" class="headerlink" title="在 CSS 中使用 Material Icons"></a>在 CSS 中使用 Material Icons</h2><figure class="highlight css"><figcaption><span>basic.css</span><a href="http://google.github.io/material-design-icons/" target="_blank" rel="external">Material Icons Guide</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.material-icons</span> &#123;</div><div class="line">    <span class="attribute">font-family</span>: <span class="string">'Material Icons'</span>;</div><div class="line">    <span class="attribute">font-weight</span>: normal;</div><div class="line">    <span class="attribute">font-style</span>: normal;</div><div class="line">    <span class="attribute">font-size</span>: <span class="number">24px</span>;  <span class="comment">/* Preferred icon size */</span></div><div class="line">    <span class="attribute">display</span>: inline-block;</div><div class="line">    <span class="attribute">line-height</span>: <span class="number">1</span>;</div><div class="line">    <span class="attribute">text-transform</span>: none;</div><div class="line">    <span class="attribute">letter-spacing</span>: normal;</div><div class="line">    <span class="attribute">word-wrap</span>: normal;</div><div class="line">    <span class="attribute">white-space</span>: nowrap;</div><div class="line">    <span class="attribute">direction</span>: ltr;</div><div class="line"></div><div class="line">    <span class="comment">/* Support for all WebKit browsers. */</span></div><div class="line">    <span class="attribute">-webkit-font-smoothing</span>: antialiased;</div><div class="line">    <span class="comment">/* Support for Safari and Chrome. */</span></div><div class="line">    <span class="attribute">text-rendering</span>: optimizeLegibility;</div><div class="line"></div><div class="line">    <span class="comment">/* Support for Firefox. */</span></div><div class="line">    <span class="attribute">-moz-osx-font-smoothing</span>: grayscale;</div><div class="line"></div><div class="line">    <span class="comment">/* Support for IE. */</span></div><div class="line">    <span class="attribute">font-feature-settings</span>: <span class="string">'liga'</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<div class="tip"><br>    <code>font-variant: small-caps</code> 會導致 material-icons 不能使用 ligatures<br></div>


<h2 id="去除瀏覽器對-focus-狀態的-style"><a href="#去除瀏覽器對-focus-狀態的-style" class="headerlink" title="去除瀏覽器對 focus 狀態的 style"></a>去除瀏覽器對 focus 狀態的 style</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.elm</span> &#123;</div><div class="line">    <span class="attribute">outline</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Select-placeholder"><a href="#Select-placeholder" class="headerlink" title="Select placeholder"></a>Select placeholder</h2><p><strong>原理</strong><br>select 預設會顯示被選擇(<code>selected</code>)的 option 內容，只要將 <code>selected</code> option 設成不顯示的話，就可以讓他在下拉選單時不顯示。</p>
<p><strong>實作</strong><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"browsers"</span> <span class="attr">required</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">disabled</span> <span class="attr">selected</span>&gt;</span>Placeholder<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"op1"</span>&gt;</span>Option1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"op2"</span>&gt;</span>Option2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"op3"</span>&gt;</span>Option3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></div></pre></td></tr></table></figure></p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">option</span><span class="selector-attr">[value=""]</span><span class="selector-attr">[disabled]</span> &#123;</div><div class="line">    <span class="attribute">display</span>: none;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>DEMO</strong></p>
<select name="browsers" required><br>    <option value="" disabled selected style="display: none">Placeholder</option><br>    <option value="op1">Option1</option><br>    <option value="op2">Option2</option><br>    <option value="op3">Option3</option><br></select>


<p>Ref: <a href="https://shellzero.wordpress.com/2015/06/29/adding-a-placeholder-to-the-select-tag-in-html5/" target="_blank" rel="external">ADDING A PLACEHOLDER TO THE SELECT TAG IN HTML5</a></p>
<h2 id="偽元素"><a href="#偽元素" class="headerlink" title="偽元素"></a>偽元素</h2><p><code>content</code> 只能用在 <code>:before</code> / <code>:after</code><br>因為 <code>input[type=&quot;text&quot;]</code> 沒有 <code>content</code>, 所以不能用偽元素<br>要寫在後面的 <code>label</code> ( <code>input + label:before { … }</code> )</p>
<h2 id="讓元素不被overlay遮住"><a href="#讓元素不被overlay遮住" class="headerlink" title="讓元素不被overlay遮住"></a>讓元素不被overlay遮住</h2><p>用 <code>:before</code> 做 overlay 時，此 overlay 會把內容整個蓋住<br>此時 <strong>內容元素設定 <code>position: relative</code></strong> , 可讓他不被 overlay 蓋住</p>
<h2 id="Favicon-refresh"><a href="#Favicon-refresh" class="headerlink" title="Favicon refresh"></a>Favicon refresh</h2><p>在檔名後面加上 <code>?v=xxx</code> 可強制不去讀 cache ，一定要更新檔案</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Flex-真是個好東西&quot;&gt;&lt;a href=&quot;#Flex-真是個好東西&quot; class=&quot;headerlink&quot; title=&quot;Flex 真是個好東西&quot;&gt;&lt;/a&gt;Flex 真是個好東西&lt;/h2&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex; &lt;span class=&quot;comment&quot;&gt;// 用flex方式顯示&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;flex-direction&lt;/span&gt;: column; &lt;span class=&quot;comment&quot;&gt;// 排列方向, column垂直排, row為水平&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;flex-basis&lt;/span&gt;: auto; &lt;span class=&quot;comment&quot;&gt;// 初始的 size&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;flex&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;// 設定佔滿空間的比例, 若同階層兩元件一為2一為3則分別佔2/5與3/5的空間&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// 若只有自己的話會把剩餘的空間佔滿, 用在垂直方向則可以把其後方元件推到最底部&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;// flex-grow + flex-shrink + flex-basis 的濃縮寫法&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;order&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;// flex元件的排列順序, 照數字大小排&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;實作參考：&lt;a href=&quot;http://webdesign.tutsplus.com/tutorials/how-to-build-a-news-website-layout-with-flexbox--cms-26611&quot;&gt;How to Build a News Website Layout with Flexbox&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>tmux 常用指令 + 自己寫 shell</title>
    <link href="http://yoursite.com/2016/08/08/tmux-use-and-shell/"/>
    <id>http://yoursite.com/2016/08/08/tmux-use-and-shell/</id>
    <published>2016-08-08T08:06:22.000Z</published>
    <updated>2016-08-08T08:28:57.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><p><code>tmux ls</code> 列出目前所有 session<br><code>tmux a -t &lt;session-name&gt;</code> 跳至該 session<br><code>tmux a -dt &lt;session-name&gt;</code> 將其他 client 踢掉</p>
<p>tmux 的操作都是 <code>^B</code> 開頭：</p>
<ul>
<li><code>^B+&lt;number&gt;</code> 切換 tmux window (現在所在的窗會以*標記</li>
<li><code>^B+C</code> 建新的窗(window)</li>
<li><code>^B+D</code> 維持 tmux 背景執行並離開</li>
<li><code>^B+,</code> 重新命名視窗</li>
<li><code>^B+$</code> 命名目前 session</li>
</ul>
<h2 id="個人用-shell"><a href="#個人用-shell" class="headerlink" title="個人用 shell"></a>個人用 shell</h2><p>知道了幾種常用的指令，為了不要每一次開 tmux 都需要重複開窗+命名，所以寫了一支 shell來幫我做這些事：（會自動開 git / sass / tpl 三個窗並各自執行 watch 指令）</p>
<figure class="highlight bash"><figcaption><span>myTmux</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="comment"># Usage</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">""</span> ];</div><div class="line"><span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"Usage1: `basename <span class="variable">$0</span>` [SESSION_NAME] [PROJECT]"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"	Create a new session with git/sass/tpl windows and start watch"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"Usage2: `basename <span class="variable">$0</span>` [SESSION_NAME]"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"	Attach the exist session and detach other clients"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"---"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"&lt;Alive session&gt;"</span></div><div class="line">	tmux ls</div><div class="line">	<span class="built_in">exit</span> 0</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line">SESSION_NAME=<span class="variable">$1</span></div><div class="line">PROJECT=<span class="variable">$2</span></div><div class="line"></div><div class="line"><span class="comment"># Ensure it's not exist</span></div><div class="line">tmux has-session -t <span class="variable">$&#123;SESSION_NAME&#125;</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ $? != 0 ];</div><div class="line"><span class="keyword">then</span></div><div class="line"></div><div class="line">	<span class="comment"># Check parameter $2</span></div><div class="line">	<span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;PROJECT&#125;</span>"</span> == <span class="string">""</span> ];</div><div class="line">	<span class="keyword">then</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"Syntax error: Missing param2 [PROJECT]"</span></div><div class="line">		<span class="built_in">exit</span> 0</div><div class="line">	<span class="keyword">fi</span></div><div class="line"></div><div class="line">	<span class="comment"># Go to the project</span></div><div class="line">	<span class="built_in">cd</span> <span class="variable">$&#123;PROJECT&#125;</span></div><div class="line"></div><div class="line">	<span class="comment"># Create the session</span></div><div class="line">	tmux new-session <span class="_">-d</span> <span class="_">-s</span> <span class="variable">$&#123;SESSION_NAME&#125;</span></div><div class="line"></div><div class="line">	<span class="comment"># Create windows (0 is exist, so use rename)</span></div><div class="line">	tmux rename-window -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:0 <span class="string">"git"</span></div><div class="line">	tmux new-window -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:1 -n sass</div><div class="line">	tmux new-window -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:2 -n tpl</div><div class="line"></div><div class="line">	<span class="comment"># Do somthing</span></div><div class="line">	tmux send-keys -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:0 <span class="string">'./oconf compile'</span> C-m</div><div class="line">	tmux send-keys -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:1 <span class="string">'./oconf watch sass'</span> C-m</div><div class="line">	tmux send-keys -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:2 <span class="string">'./oconf watch tpl'</span> C-m</div><div class="line"></div><div class="line">	<span class="comment"># Start on the first window</span></div><div class="line">	tmux select-window -t <span class="variable">$&#123;SESSION_NAME&#125;</span>:0</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment"># Detach other clients &amp; attach session : a=attach, d=detach other client, t=target</span></div><div class="line">tmux a -dt <span class="variable">$&#123;SESSION_NAME&#125;</span></div></pre></td></tr></table></figure>
<p>執行方式</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ./myTmux [SESSION_NAME] [PROJECT]</div></pre></td></tr></table></figure>
<p>另外可將指令<a href="(http://thisis577.github.io/2016/08/05/bash-alias/)">自訂別名(alias)</a>，這樣就可以不用找相對路徑來下指令了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;常用指令&quot;&gt;&lt;a href=&quot;#常用指令&quot; class=&quot;headerlink&quot; title=&quot;常用指令&quot;&gt;&lt;/a&gt;常用指令&lt;/h2&gt;&lt;p&gt;&lt;code&gt;tmux ls&lt;/code&gt; 列出目前所有 session&lt;br&gt;&lt;code&gt;tmux a -t &amp;lt;ses
    
    </summary>
    
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
      <category term="tmux" scheme="http://yoursite.com/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>Bower - js 的 package 管理</title>
    <link href="http://yoursite.com/2016/08/08/bower-install/"/>
    <id>http://yoursite.com/2016/08/08/bower-install/</id>
    <published>2016-08-08T07:46:15.000Z</published>
    <updated>2016-08-08T08:29:40.420Z</updated>
    
    <content type="html"><![CDATA[<h2 id="透過-bower-安裝-package"><a href="#透過-bower-安裝-package" class="headerlink" title="透過 bower 安裝 package"></a>透過 bower 安裝 package</h2><p>在 <a href="http://bower.io" target="_blank" rel="external">bower</a> 上找相關的 package，找到以後在 <code>bower.json</code> 檔案裡面的 dependencies 設定 package name 與版本號(或用 <code>*</code> 代表任一版本, 會自動裝最新的)：</p>
<a id="more"></a>
<figure class="highlight js"><figcaption><span>bower.json</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="string">"dependencies"</span> : &#123;</div><div class="line">    <span class="string">"&lt;package-name&gt;"</span>: <span class="string">"&lt;version&gt;"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>設定完以後進行安裝：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ bower install</div></pre></td></tr></table></figure>
<p>安裝完後可以在 <code>vendor/bower/</code> 底下看到剛裝好的 package。</p>
<h2 id="Yii-asset-設定"><a href="#Yii-asset-設定" class="headerlink" title="Yii asset 設定"></a>Yii asset 設定</h2><p>接著到 <code>assets</code> 底下建立新的 class 檔案</p>
<figure class="highlight php"><figcaption><span>assets/NewPackage.php</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// class name 需與檔名相符</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">NewPackage</span> <span class="keyword">extends</span> <span class="title">AssetBundle</span> </span>&#123;</div><div class="line">    <span class="comment">// 設定所需檔案的 src 資料夾</span></div><div class="line">    <span class="comment">// 一般是在新的 package folder 下的 dist (反正找到有.min.xxx的就對惹</span></div><div class="line">    <span class="keyword">public</span> $sourcePath = <span class="string">'@bower/&lt;package-name&gt;/dist/'</span>;</div><div class="line">    <span class="comment">// 路徑已經設定好，只需要把檔名填上去就好了</span></div><div class="line">    <span class="keyword">public</span> $css = [</div><div class="line">        &lt;package-name&gt;.min.css</div><div class="line">    ];</div><div class="line">    <span class="keyword">public</span> $js = [</div><div class="line">        &lt;package-name&gt;.min.js</div><div class="line">    ];</div><div class="line">    <span class="comment">// 看該隻檔案需要用到哪個 class 則去找該 class 的 namespace 寫路徑進去</span></div><div class="line">    <span class="comment">// Ex. Namespace app\assets, 則寫 'app\assets\&lt;class-name&gt;'</span></div><div class="line">    <span class="keyword">public</span> $depends = [</div><div class="line">        <span class="string">'app\assets\&lt;class-name&gt;'</span></div><div class="line">    ];</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="移除-package"><a href="#移除-package" class="headerlink" title="移除 package"></a>移除 package</h2><p>將 <code>bower.json</code> 的 dependencies 拿掉然後重新 <code>bower install</code> 即可。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;透過-bower-安裝-package&quot;&gt;&lt;a href=&quot;#透過-bower-安裝-package&quot; class=&quot;headerlink&quot; title=&quot;透過 bower 安裝 package&quot;&gt;&lt;/a&gt;透過 bower 安裝 package&lt;/h2&gt;&lt;p&gt;在 &lt;a href=&quot;http://bower.io&quot;&gt;bower&lt;/a&gt; 上找相關的 package，找到以後在 &lt;code&gt;bower.json&lt;/code&gt; 檔案裡面的 dependencies 設定 package name 與版本號(或用 &lt;code&gt;*&lt;/code&gt; 代表任一版本, 會自動裝最新的)：&lt;/p&gt;
    
    </summary>
    
    
      <category term="bower" scheme="http://yoursite.com/tags/bower/"/>
    
  </entry>
  
  <entry>
    <title>個人常用 Git 指令</title>
    <link href="http://yoursite.com/2016/08/08/git-common-use/"/>
    <id>http://yoursite.com/2016/08/08/git-common-use/</id>
    <published>2016-08-08T07:27:15.000Z</published>
    <updated>2016-11-16T10:22:38.917Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://blog.gogojimmy.net/2012/02/29/git-scenario/" target="_blank" rel="external">Git 情境劇</a> 這篇文章應該已經涵蓋了大部分的使用情境，教學也寫得很清楚，以下只列出一些我自己比較常用或比較記不住的指令XD</p>
<a id="more"></a>
<h2 id="暫存-commit"><a href="#暫存-commit" class="headerlink" title="暫存 commit"></a>暫存 commit</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 暫時把目前的 commit 存起來</span></div><div class="line">git commit -m tmp</div><div class="line"><span class="comment"># 還原暫存的commit</span></div><div class="line">git reset HEAD^</div></pre></td></tr></table></figure>
<p>暫存變更則是使用 <code>git stash</code>。但 stash 不會把 untracked 的檔案也一起 stash 起來，所以在 pull 的時候可能會出問題，較建議用 commit tmp。</p>
<div class="tip"><br>    暫存 commit 只有在 branch 可以做！千萬不要在 master 做！<br>    若在 master 修改後想要暫存的話，先 <code>git checkout -b new-branch</code> 到新的 branch 再暫存。<br></div>

<h2 id="local-端所有東西都不要，reset-回目前遠端的-master"><a href="#local-端所有東西都不要，reset-回目前遠端的-master" class="headerlink" title="local 端所有東西都不要，reset 回目前遠端的 master"></a>local 端所有東西都不要，reset 回目前遠端的 master</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git fetch origin</div><div class="line"><span class="comment"># 大寫B強制用遠端進度蓋掉本地 master</span></div><div class="line">git checkout -B master origin/master</div></pre></td></tr></table></figure>
<h2 id="將-branch-的變更推到遠端"><a href="#將-branch-的變更推到遠端" class="headerlink" title="將 branch 的變更推到遠端"></a>將 branch 的變更推到遠端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 先在 branch 做 commit</span></div><div class="line"><span class="comment"># 做完 commit 後切回 master</span></div><div class="line">(branch)$ git checkout master</div><div class="line"><span class="comment"># 檢查 master 與遠端是否同步</span></div><div class="line">(master)$ git pull</div><div class="line"><span class="comment"># 無任何衝突的話就 merge branch</span></div><div class="line">(master)$ git merge &lt;branch-name&gt;</div><div class="line">(master)$ git push</div></pre></td></tr></table></figure>
<h2 id="拉新的-commit-到目前-branch"><a href="#拉新的-commit-到目前-branch" class="headerlink" title="拉新的 commit 到目前 branch"></a>拉新的 commit 到目前 branch</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 更新 master</span></div><div class="line">(master)$ git pull</div><div class="line">(master)$ git checkout &lt;branch-name&gt;</div><div class="line"><span class="comment"># 對 branch 做 rebase，把它接到更新過的 master 上</span></div><div class="line">(branch)$ git rebase master</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://blog.gogojimmy.net/2012/02/29/git-scenario/&quot;&gt;Git 情境劇&lt;/a&gt; 這篇文章應該已經涵蓋了大部分的使用情境，教學也寫得很清楚，以下只列出一些我自己比較常用或比較記不住的指令XD&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 建立新文章後自動打開編輯器跟瀏覽器</title>
    <link href="http://yoursite.com/2016/08/05/auto-open-editor-and-browser-after-hexo-new-post/"/>
    <id>http://yoursite.com/2016/08/05/auto-open-editor-and-browser-after-hexo-new-post/</id>
    <published>2016-08-05T12:41:54.000Z</published>
    <updated>2016-08-08T07:11:33.621Z</updated>
    
    <content type="html"><![CDATA[<p>基本原理是去監聽 <code>hexo new</code> 這個指令，但網路上找到的文章大部分是在 OS X 或根本就是 Linux 環境，指令怎麼跑都不會動～（哭哭）<br>後來翻到的<a href="http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/" target="_blank" rel="external">一篇文章</a>裡面提到 windows 的指令不一樣：</p>
<ul>
<li>要用 <code>start</code> 取代 <code>open -a</code></li>
<li>sublime 的執行路徑也需要另外<a href="#adding-sublime-to-PATH">設置</a></li>
</ul>
<p>總之終於可以自動打開瀏覽器跟編輯器，愉快的進行編輯啦～</p>
<a id="more"></a>
<hr>
<h2 id="在建立新文章後自動打開編輯器-in-Windows"><a href="#在建立新文章後自動打開編輯器-in-Windows" class="headerlink" title="在建立新文章後自動打開編輯器(in Windows)"></a>在建立新文章後自動打開編輯器(in Windows)</h2><figure class="highlight js"><figcaption><span>/hexo-root/scripts/new-post.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> exec = <span class="built_in">require</span>(<span class="string">'child_process'</span>).exec;</div><div class="line">hexo.on(<span class="string">'new'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</div><div class="line">    exec(<span class="string">'hexo server'</span>); <span class="comment">// start preview server</span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'running hexo server....'</span>);</div><div class="line">    setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">// open preview url</span></div><div class="line">        exec(<span class="string">'start "Google Chrome" "http://localhost:4000"'</span>);</div><div class="line">        <span class="comment">// open with editor</span></div><div class="line">        exec(<span class="string">'start "subl.exe" '</span>+data.path);</div><div class="line">    &#125;, <span class="number">3000</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"open editor and browser"</span></div></pre></td></tr></table></figure>
<hr>
<p><a name="adding-sublime-to-PATH"></a></p>
<h2 id="在-Windows-下從命令列開啟-sublime-的設置"><a href="#在-Windows-下從命令列開啟-sublime-的設置" class="headerlink" title="在 Windows 下從命令列開啟 sublime 的設置"></a>在 Windows 下從命令列開啟 sublime 的設置</h2><p>1.<code>Ctrl + X</code> 打開選單 &gt; 開啟 <strong>系統</strong><br>2.進階系統設定 &gt; 進階頁籤 &gt; 點擊下方的 <strong>環境變數</strong><br>3.新增 <strong>系統變數(S)</strong></p>
<ul>
<li>變數名稱 | <code>SUBLIME</code></li>
<li>變數值  | <code>C:\Program Files\Sublime Text 3</code><br>(即為 Sublime 的安裝資料夾)</li>
</ul>
<p>4.編輯 <strong>使用者變數(U)</strong> 當中的 <strong>PATH</strong></p>
<ul>
<li>在末端加入 <code>;%SUBLIME%</code></li>
</ul>
<p>5.重開 command line ，就可以使用 <code>subl.exe</code> 來呼叫 sublime</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ subl.exe test.txt</div></pre></td></tr></table></figure>
<div class="tip"><br>    如果是 Win10，第一次執行時可能會需要先設定 .md 的預設開啟程式為 sublime。（在 Win10 跳出的選擇框選擇即可）<br></div>

<hr>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="https://lessmind.github.io/2015/10/13/New-hexo-post-auto-open-with-editor/" target="_blank" rel="external">New hexo post auto open with editor</a></li>
<li><a href="http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/" target="_blank" rel="external">在 hexo new 之后立即打开新建的 Markdown 文稿</a></li>
<li><a href="https://scotch.io/tutorials/open-sublime-text-from-the-command-line-using-subl-exe-windows#adding-sublime-to-your-path" target="_blank" rel="external">Open Sublime Text From the Command Line Using subl.exe (Windows)</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基本原理是去監聽 &lt;code&gt;hexo new&lt;/code&gt; 這個指令，但網路上找到的文章大部分是在 OS X 或根本就是 Linux 環境，指令怎麼跑都不會動～（哭哭）&lt;br&gt;後來翻到的&lt;a href=&quot;http://liam0205.me/2015/05/01/open-editor-after-hexo-new-immediately/&quot;&gt;一篇文章&lt;/a&gt;裡面提到 windows 的指令不一樣：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要用 &lt;code&gt;start&lt;/code&gt; 取代 &lt;code&gt;open -a&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;sublime 的執行路徑也需要另外&lt;a href=&quot;#adding-sublime-to-PATH&quot;&gt;設置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;總之終於可以自動打開瀏覽器跟編輯器，愉快的進行編輯啦～&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="sublime" scheme="http://yoursite.com/tags/sublime/"/>
    
  </entry>
  
  <entry>
    <title>Chrome 的中文字型設定</title>
    <link href="http://yoursite.com/2016/08/05/chinese-text-render-in-chrome/"/>
    <id>http://yoursite.com/2016/08/05/chinese-text-render-in-chrome/</id>
    <published>2016-08-05T09:39:16.000Z</published>
    <updated>2016-08-08T07:11:33.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="解決投影時中文字型-render-問題"><a href="#解決投影時中文字型-render-問題" class="headerlink" title="解決投影時中文字型 render 問題"></a>解決投影時中文字型 render 問題</h2><a id="more"></a>
<p>Chrome v49+ 的版本在投影到第二台螢幕上 render 老是很可怕，<br>我又一直查不太到相關資訊，害我只能先把版本鎖死在 v49 好一陣子。</p>
<p>前幾天發現 Chrome canary 的中文 render 很漂亮，滿心歡喜的跳槽過去，<br>結果開心不到兩天，一更新下去，登愣～竟然！不能！輸入中文了= =</p>
<p>IME 整個掛點，裝了 Chrome 的外掛 Google input tool 也只能在特定的 input text 輸入中文。<br>網址列及大部分的輸入框都不能輸入中文（顯示 <code>IME 已停用</code>）！<br>怒去 Google Chrome Help Forum 投訴(?)，順便爬爬有沒有相關議題。<br>然後找到了一篇雖然不是中文字型但是也是 render 問題的討論串，就找到解法了！！！！</p>
<p>解法還TMD的簡單：</p>
<ol>
<li>打開 <strong>設定</strong></li>
<li>找到 <strong>系統</strong> 區塊（在進階設定裡）</li>
<li>取消勾選 <strong>在可用時使用硬體加速</strong></li>
<li>重新啟動 chrome</li>
</ol>
<p>困擾我一個多月的事情就解決了，可喜可賀、可喜可賀=__=</p>
<hr>
<h2 id="順便設定預設中文字型"><a href="#順便設定預設中文字型" class="headerlink" title="順便設定預設中文字型"></a>順便設定預設中文字型</h2><ol>
<li>打開 <strong>設定</strong></li>
<li>找到 <strong>網頁內容</strong> 區塊</li>
<li>選 <strong>自訂字型</strong></li>
<li>將 <strong>標準字型</strong> 改為喜歡的字型就可以了</li>
<li>重新啟動 chrome 體驗美好的中文字型吧～</li>
</ol>
<p>因為微軟正黑體在大部分的螢幕上 render 都不太好<br>所以我裝了 <a href="https://www.google.com/get/noto/help/cjk/" target="_blank" rel="external">Google 和 Adobe 出的思源黑體</a><br>愛將是 <code>Noto Sans CJK TC DemiLight</code><br>啊～沒有新細明體的世界真是美好ˊ_&gt;ˋ</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;解決投影時中文字型-render-問題&quot;&gt;&lt;a href=&quot;#解決投影時中文字型-render-問題&quot; class=&quot;headerlink&quot; title=&quot;解決投影時中文字型 render 問題&quot;&gt;&lt;/a&gt;解決投影時中文字型 render 問題&lt;/h2&gt;
    
    </summary>
    
    
      <category term="chrome" scheme="http://yoursite.com/tags/chrome/"/>
    
      <category term="font" scheme="http://yoursite.com/tags/font/"/>
    
  </entry>
  
  <entry>
    <title>為指令自訂別名(alias)</title>
    <link href="http://yoursite.com/2016/08/05/bash-alias/"/>
    <id>http://yoursite.com/2016/08/05/bash-alias/</id>
    <published>2016-08-05T06:44:07.000Z</published>
    <updated>2016-08-08T07:11:33.626Z</updated>
    
    <content type="html"><![CDATA[<h2 id="在當前-session-為指令自訂別名-alias"><a href="#在當前-session-為指令自訂別名-alias" class="headerlink" title="在當前 session 為指令自訂別名(alias)"></a>在當前 session 為指令自訂別名(alias)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># alias &lt;new-command&gt;='&lt;old-command&gt; -&lt;param&gt;'</span></div><div class="line"><span class="comment"># 使用 $&#123;HOME&#125; 自動抓家目錄位置</span></div><div class="line">$ <span class="built_in">alias</span> hd=<span class="string">"<span class="variable">$&#123;HOME&#125;</span>/hexo deploy"</span></div><div class="line">$ <span class="built_in">alias</span> hp=<span class="string">"<span class="variable">$&#123;HOME&#125;</span>/hexo push"</span></div><div class="line"><span class="comment"># 使目前設置的 alias 即刻生效，不需要重開 terminal</span></div><div class="line">$ <span class="built_in">source</span> ~/.bashrc</div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看目前所有 alias</span></div><div class="line">$ <span class="built_in">alias</span></div><div class="line"><span class="built_in">alias</span> hd=<span class="string">'/c/Users/577/hexo deploy'</span></div><div class="line"><span class="built_in">alias</span> hp=<span class="string">'/c/Users/577/hexo push'</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 刪除已存在的 alias</span></div><div class="line">$ <span class="built_in">unalias</span> &lt;<span class="built_in">command</span>&gt;</div></pre></td></tr></table></figure>
<h2 id="讓-alias-永久生效"><a href="#讓-alias-永久生效" class="headerlink" title="讓 alias 永久生效"></a>讓 alias 永久生效</h2><p>上述指令皆為一次性，只有下指令的這一個 session 有用<br>為了讓指令在 session 一打開時就執行，需編輯 <code>.bashrc</code></p>
<figure class="highlight bash"><figcaption><span>~/.bashrc</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 加入 alias</span></div><div class="line"><span class="built_in">alias</span> hd=<span class="string">"<span class="variable">$&#123;HOME&#125;</span>/hexo deploy"</span></div><div class="line"><span class="built_in">alias</span> hp=<span class="string">"<span class="variable">$&#123;HOME&#125;</span>/hexo push"</span></div></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使設定直接生效</span></div><div class="line">$ <span class="built_in">source</span> ~/.bashrc</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;在當前-session-為指令自訂別名-alias&quot;&gt;&lt;a href=&quot;#在當前-session-為指令自訂別名-alias&quot; class=&quot;headerlink&quot; title=&quot;在當前 session 為指令自訂別名(alias)&quot;&gt;&lt;/a&gt;在當前 sessio
    
    </summary>
    
    
      <category term="bash" scheme="http://yoursite.com/tags/bash/"/>
    
  </entry>
  
  <entry>
    <title>Git 學習筆記</title>
    <link href="http://yoursite.com/2016/08/02/git-command/"/>
    <id>http://yoursite.com/2016/08/02/git-command/</id>
    <published>2016-08-02T08:25:28.000Z</published>
    <updated>2016-08-03T08:59:14.602Z</updated>
    
    <content type="html"><![CDATA[<p>編輯基本設定</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 設定預設編輯器為 vim</span></div><div class="line"><span class="comment"># git config --system core.editor &lt;editor&gt;</span></div><div class="line">git config --system core.editor vim</div><div class="line"><span class="comment"># 設定預設編輯器為 sublime</span></div><div class="line">git config --global core.editor <span class="string">"subl -n -w"</span></div><div class="line"><span class="comment"># 或</span></div><div class="line"><span class="comment"># 直接編輯 global config</span></div><div class="line">git config --global --edit</div></pre></td></tr></table></figure>
<p>指令 alias</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 加一些常用的 git-command alias</span></div><div class="line"><span class="comment"># git config --global alias.&lt;alias-name&gt; &lt;git-command&gt;</span></div><div class="line">git config --global alias.st status</div></pre></td></tr></table></figure>
<p>Ref: <a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config" target="_blank" rel="external">Git tutorials</a></p>
<a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;編輯基本設定&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 設定預設編輯器為 vim&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# git config --system core.editor &amp;lt;editor&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --system core.editor vim&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 設定預設編輯器為 sublime&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global core.editor &lt;span class=&quot;string&quot;&gt;&quot;subl -n -w&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 或&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 直接編輯 global config&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global --edit&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;指令 alias&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 加一些常用的 git-command alias&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# git config --global alias.&amp;lt;alias-name&amp;gt; &amp;lt;git-command&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global alias.st status&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Ref: &lt;a href=&quot;https://www.atlassian.com/git/tutorials/setting-up-a-repository/git-config&quot;&gt;Git tutorials&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>待讀清單</title>
    <link href="http://yoursite.com/2016/07/31/reading-list/"/>
    <id>http://yoursite.com/2016/07/31/reading-list/</id>
    <published>2016-07-30T16:12:09.000Z</published>
    <updated>2016-08-02T04:14:09.207Z</updated>
    
    <content type="html"><![CDATA[<p>要看的東西好多，不如看鳥吧…</p>
<a id="more"></a>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ul>
<li><a href="https://www.atlassian.com/git/tutorials/what-is-version-control" target="_blank" rel="external">Git tutorial</a></li>
</ul>
<h2 id="Animation"><a href="#Animation" class="headerlink" title="Animation"></a>Animation</h2><ul>
<li><a href="https://developers.google.com/web/fundamentals/design-and-ui/animations/css-vs-javascript?hl=en" target="_blank" rel="external">CSS vs JavaScript animations</a></li>
<li><a href="https://css-tricks.com/myth-busting-css-animations-vs-javascript/" target="_blank" rel="external">Myth Busting: CSS Animations vs. JavaScript | CSS-Tricks</a></li>
<li><a href="https://css-tricks.com/guide-svg-animations-smil/" target="_blank" rel="external">A Guide to SVG Animations(SMIL) | CSS-Tricks</a></li>
<li><a href="How SVG Line Animation Works | CSS-Tricks">How SVG Line Animation Works | CSS-Tricks</a></li>
<li>Tool: <a href="http://greensock.com/tweenlite" target="_blank" rel="external">TweenLite</a></li>
</ul>
<h2 id="UI-UX"><a href="#UI-UX" class="headerlink" title="UI/UX"></a>UI/UX</h2><ul>
<li><a href="iOS Human Interface Guidelines">iOS Human Interface Guidelines</a></li>
<li><a href="http://vide.tw/5180" target="_blank" rel="external">科技中的設計</a></li>
<li><a href="https://medium.freecodecamp.com/from-zero-to-front-end-hero-part-1-7d4f7f0bff02#.kkbd9i2e8" target="_blank" rel="external">From Zero to Front-end Hero (Part 1) — Free Code Camp</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;要看的東西好多，不如看鳥吧…&lt;/p&gt;
    
    </summary>
    
    
      <category term="reading" scheme="http://yoursite.com/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>Daily UI 挑戰</title>
    <link href="http://yoursite.com/2016/07/29/Daily-UI/"/>
    <id>http://yoursite.com/2016/07/29/Daily-UI/</id>
    <published>2016-07-29T01:32:37.000Z</published>
    <updated>2016-07-29T05:24:30.438Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DayilUI-其他人的作品"><a href="#DayilUI-其他人的作品" class="headerlink" title="DayilUI 其他人的作品"></a>DayilUI <a href="http://collectui.com/challenges/sign-up" target="_blank" rel="external">其他人的作品</a></h2><p><small class="murmur"><br>暫時這些應該夠練死我了…<br>我應該沒辦法每天一個，一週一個可能就了不起了 囧<br></small></p>
<a id="more"></a>
<ol>
<li>Sign Up</li>
<li>Checkout</li>
<li>Landing Page</li>
<li>Calculator</li>
<li>App Icon</li>
<li>User Profile</li>
<li>Settings</li>
<li>404 Page</li>
<li>Music Player</li>
<li>Social Share</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;DayilUI-其他人的作品&quot;&gt;&lt;a href=&quot;#DayilUI-其他人的作品&quot; class=&quot;headerlink&quot; title=&quot;DayilUI 其他人的作品&quot;&gt;&lt;/a&gt;DayilUI &lt;a href=&quot;http://collectui.com/challenges/sign-up&quot;&gt;其他人的作品&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;small class=&quot;murmur&quot;&gt;&lt;br&gt;暫時這些應該夠練死我了…&lt;br&gt;我應該沒辦法每天一個，一週一個可能就了不起了 囧&lt;br&gt;&lt;/small&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="practice" scheme="http://yoursite.com/tags/practice/"/>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>CSS3 實作練習清單</title>
    <link href="http://yoursite.com/2016/07/28/CSS3-practice-list/"/>
    <id>http://yoursite.com/2016/07/28/CSS3-practice-list/</id>
    <published>2016-07-28T14:22:23.000Z</published>
    <updated>2016-08-02T04:08:43.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="放一些想要練習的目標清單在這裡"><a href="#放一些想要練習的目標清單在這裡" class="headerlink" title="放一些想要練習的目標清單在這裡"></a>放一些想要練習的目標清單在這裡</h1><div class="tip"><br>    皆為看著成品做一遍練習技巧，非本人原創。<br></div>

<a id="more"></a>
<hr>
<h1 id="練習目標"><a href="#練習目標" class="headerlink" title="練習目標"></a>練習目標</h1><h2 id="練習4-Hover-button"><a href="#練習4-Hover-button" class="headerlink" title="練習4 - Hover button"></a>練習4 - <a href="https://lichin.me/hoverbtn2/" target="_blank" rel="external">Hover button</a></h2><p><small>Ref: <a href="https://lichin.me/css/2016/07/28/hover-button-animation3" target="_blank" rel="external">hover-button-animation3</a></small><br><small>Author: Lichin</small></p>
<p>Tool: <a href="http://www.cockos.com/licecap/" target="_blank" rel="external">錄製網頁GIF的工具</a></p>
<h2 id="練習5-Error-Message"><a href="#練習5-Error-Message" class="headerlink" title="練習5 - Error Message"></a>練習5 - <a href="https://dribbble.com/shots/2818079-Error-Message" target="_blank" rel="external">Error Message</a></h2><hr>
<h1 id="先前的練習"><a href="#先前的練習" class="headerlink" title="先前的練習"></a>先前的練習</h1><h2 id="練習3-打字機效果"><a href="#練習3-打字機效果" class="headerlink" title="練習3 - 打字機效果"></a>練習3 - 打字機效果</h2><p></p><p data-height="482" data-theme-id="light" data-slug-hash="oLrPQW" data-default-tab="result" data-user="thisis577" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thisis577/pen/oLrPQW/" target="_blank" rel="external">UI practice - Typewriter</a> by 577 (<a href="http://codepen.io/thisis577" target="_blank" rel="external">@thisis577</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<p>完全靠 keyframes 寫出來的<br>缺點是不能輸入太長的字串，不然時間會不夠用~~</p>
<p>其他應用：<a href="/">首頁置頂效果</a></p>
<h2 id="練習2-搜尋效果"><a href="#練習2-搜尋效果" class="headerlink" title="練習2 - 搜尋效果"></a>練習2 - 搜尋效果</h2><p><img src="https://d262ilb51hltx0.cloudfront.net/max/800/1*1PijTRGwpdBDO4yQPJCBjA.gif" alt="Search"><br><small class="img-description">Author: 不知道作者是誰QQ，待查</small></p>
<h4 id="成果：codepen"><a href="#成果：codepen" class="headerlink" title="成果：codepen"></a>成果：<a href="http://codepen.io/thisis577/pen/jAGmyR/" target="_blank" rel="external">codepen</a></h4><p><small class="murmur"><br>    用 SVG 可以辦到好多事情阿！<br>    但是這一頁在舊版 chrome &amp; 手機上一開就 Crash，一定有哪裡寫錯吧…QQ<br>    （因為會 crash 暫時不放 embed)<br></small></p>
<h2 id="練習1-切換日夜"><a href="#練習1-切換日夜" class="headerlink" title="練習1 - 切換日夜"></a>練習1 - 切換日夜</h2><p><img src="https://d262ilb51hltx0.cloudfront.net/max/800/1*Na6uh-8wut97eVoIABslMA.gif" alt="Switch day and night"><br><small class="img-description">Author: 不知道作者是誰，待查</small></p>
<h4 id="成果："><a href="#成果：" class="headerlink" title="成果："></a>成果：</h4><p></p><p data-height="482" data-theme-id="light" data-slug-hash="wWAgmr" data-default-tab="result" data-user="thisis577" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/thisis577/pen/wWAgmr/" target="_blank" rel="external">UI example practice - switch day and night</a> by 577 (<a href="http://codepen.io/thisis577" target="_blank" rel="external">@thisis577</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<p>知道怎麼用動畫拼出來就沒有再細刻了，細節沒有做到完全一模一樣。<br>因為是第一個練習，沒有用到 SVG，感覺用了很多不必要的 div，有點笨啊…<br>CSS3 的貝茲曲線沒有辦法做出 bounce 的效果，太陽跟月亮的那個「ㄉㄨㄞ妖妖」的感覺可能需要用 SVG 的動畫或者 JS 來做吧 @@</p>
<p>Ref: <a href="http://easings.net/zh-tw" target="_blank" rel="external">Easing 函數速查表</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;放一些想要練習的目標清單在這裡&quot;&gt;&lt;a href=&quot;#放一些想要練習的目標清單在這裡&quot; class=&quot;headerlink&quot; title=&quot;放一些想要練習的目標清單在這裡&quot;&gt;&lt;/a&gt;放一些想要練習的目標清單在這裡&lt;/h1&gt;&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;    皆為看著成品做一遍練習技巧，非本人原創。&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="practice" scheme="http://yoursite.com/tags/practice/"/>
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 疑難雜症</title>
    <link href="http://yoursite.com/2016/07/28/hexo-faq/"/>
    <id>http://yoursite.com/2016/07/28/hexo-faq/</id>
    <published>2016-07-28T06:31:28.000Z</published>
    <updated>2016-07-29T05:24:30.462Z</updated>
    
    <content type="html"><![CDATA[<h4 id="純粹記錄我遇到的各種問題"><a href="#純粹記錄我遇到的各種問題" class="headerlink" title="純粹記錄我遇到的各種問題"></a>純粹記錄我遇到的各種問題</h4><a id="more"></a>
<p>&nbsp;</p>
<h1 id="EMFILE-錯誤"><a href="#EMFILE-錯誤" class="headerlink" title="EMFILE 錯誤"></a>EMFILE 錯誤</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Error:</span> EMFILE, too many open files</div></pre></td></tr></table></figure>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><div class="tip"><br>    <div>自力救濟法：<code>打開工作管理員，把 Node.js 砍掉</code>，接下來重新跑 hexo 指令就好了</div><br>    <small class="murmur"><br>    <a href="https://hexo.io/zh-tw/docs/troubleshooting.html#EMFILE-錯誤" target="_blank" rel="external">官方解法</a> 是下 <code>ulimit -n 10000</code>，但 10000 好像太大了，我只有設定在 2048 時有成功， BUT！ 只順暢了一下子就又噴相同錯誤了= =<br>    </small><br></div>

<p>&nbsp;</p>
<h1 id="Error-Media-query-expression"><a href="#Error-Media-query-expression" class="headerlink" title="Error: Media query expression"></a>Error: Media query expression</h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="attr">Error:</span> media query expression must begin with <span class="string">'('</span></div><div class="line">ERROR Asset render failed: scss/customize.css</div><div class="line"><span class="attr">Error:</span> media query expression must begin with <span class="string">'('</span></div><div class="line">...</div></pre></td></tr></table></figure>
<h2 id="還找不到解法QQ"><a href="#還找不到解法QQ" class="headerlink" title="還找不到解法QQ"></a>還找不到解法QQ</h2>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;純粹記錄我遇到的各種問題&quot;&gt;&lt;a href=&quot;#純粹記錄我遇到的各種問題&quot; class=&quot;headerlink&quot; title=&quot;純粹記錄我遇到的各種問題&quot;&gt;&lt;/a&gt;純粹記錄我遇到的各種問題&lt;/h4&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>自己寫 Hexo shell</title>
    <link href="http://yoursite.com/2016/07/28/customize-hexo-shell/"/>
    <id>http://yoursite.com/2016/07/28/customize-hexo-shell/</id>
    <published>2016-07-28T03:09:25.000Z</published>
    <updated>2016-08-08T08:19:29.903Z</updated>
    
    <content type="html"><![CDATA[<h4 id="可以自動-deploy-hexo-並-push-source-code"><a href="#可以自動-deploy-hexo-並-push-source-code" class="headerlink" title="可以自動 deploy hexo 並 push source code"></a>可以自動 deploy hexo 並 push source code</h4><a id="more"></a>
<h2 id="在-root-編寫檔案，此處檔名為-hexo"><a href="#在-root-編寫檔案，此處檔名為-hexo" class="headerlink" title="在 root 編寫檔案，此處檔名為 hexo"></a>在 root 編寫檔案，此處檔名為 <code>hexo</code></h2><p>(shell 可不需副檔名)</p>
<figure class="highlight bash"><figcaption><span>hexo</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="comment"># Usage</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$1</span>"</span> == <span class="string">""</span> ];</div><div class="line"><span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"Usage: `basename <span class="variable">$0</span>` [deploy|push] [comment]"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"[comment] should use double quotes"</span></div><div class="line">	<span class="built_in">exit</span> 0</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> == <span class="string">"deploy"</span> ];</div><div class="line"><span class="keyword">then</span></div><div class="line">	<span class="comment"># Hexo modify themes and deploy all (themes + post)</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"deploy start:"</span></div><div class="line">	hexo clean</div><div class="line">	hexo generate</div><div class="line">	hexo deploy</div><div class="line"><span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="comment"># push hexo source</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> != <span class="string">""</span> ];</div><div class="line"><span class="keyword">then</span></div><div class="line">	<span class="comment"># use double qoutes to quote all sentence in $2</span></div><div class="line">	<span class="keyword">if</span> [ <span class="string">"<span class="variable">$2</span>"</span> != <span class="string">""</span> ];</div><div class="line">	<span class="keyword">then</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"push start:"</span></div><div class="line">		git add .</div><div class="line">		git commit -m <span class="string">"<span class="variable">$2</span>"</span></div><div class="line">		git push</div><div class="line">	<span class="keyword">fi</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># deploy + push</span></div><div class="line">$ ./hexo deploy <span class="string">"give some comment"</span></div><div class="line"><span class="comment"># only push</span></div><div class="line">$ ./hexo push <span class="string">"give some comment"</span></div></pre></td></tr></table></figure>
<div class="tip"><br>    <code>&quot;$2&quot;</code> 只要用雙引號刮起來就可以吃含有空格的句子<br></div>


<h4 id="也可以自訂別名讓指令縮短"><a href="#也可以自訂別名讓指令縮短" class="headerlink" title="也可以自訂別名讓指令縮短"></a>也可以自訂別名讓指令縮短</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 使用 $&#123;HOME&#125; 自動抓家目錄位置</span></div><div class="line">$ <span class="built_in">alias</span> hd=<span class="string">"<span class="variable">$&#123;HOME&#125;</span>/hexo deploy"</span></div></pre></td></tr></table></figure>
<p>延伸閱讀：<a href="http://thisis577.github.io/2016/08/05/bash-alias/" target="_blank" rel="external">為指令自訂別名(alias)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;可以自動-deploy-hexo-並-push-source-code&quot;&gt;&lt;a href=&quot;#可以自動-deploy-hexo-並-push-source-code&quot; class=&quot;headerlink&quot; title=&quot;可以自動 deploy hexo 並 push source code&quot;&gt;&lt;/a&gt;可以自動 deploy hexo 並 push source code&lt;/h4&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="shell" scheme="http://yoursite.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Custom 404 page for github page</title>
    <link href="http://yoursite.com/2016/07/28/custom-404-page/"/>
    <id>http://yoursite.com/2016/07/28/custom-404-page/</id>
    <published>2016-07-28T02:38:39.000Z</published>
    <updated>2016-08-08T07:11:33.635Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://imgur.com/Lg9AMHO.png" alt="404-page"><br><small class="img-descript">本站的 404 page</small></p>
<a id="more"></a>
<hr>
<h2 id="創建要給-404-的新頁面"><a href="#創建要給-404-的新頁面" class="headerlink" title="創建要給 404 的新頁面"></a>創建要給 404 的新頁面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new page 404</div></pre></td></tr></table></figure>
<h2 id="編輯-source-404-index-md"><a href="#編輯-source-404-index-md" class="headerlink" title="編輯 source/404/index.md"></a>編輯 <code>source/404/index.md</code></h2><figure class="highlight md"><figcaption><span>source/404/index.md</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">title: 404</div><div class="line"><span class="section">permalink: /404 # 指定固定連結為 http://your_account.github.io/404.html</span></div><div class="line">---</div><div class="line"><span class="xml"><span class="comment">&lt;!-- Write inline style --&gt;</span></span></div><div class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="undefined"></span></span></div><div class="line">...</div><div class="line"><span class="xml"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></div></pre></td></tr></table></figure>
<div class="tip"><br>    若要在 local 端測試的話，需將 permalink 拿掉<br>    <div>測試網址為 <code>http://localhost:4000/404</code></div><br></div>


<hr>
<h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul>
<li><a href="http://moxfive.xyz/2015/10/16/hexo-404-page/" target="_blank" rel="external">在 Hexo 中创建匹配主题的404页面</a></li>
<li><a href="https://help.github.com/articles/creating-a-custom-404-page-for-your-github-pages-site/" target="_blank" rel="external">Creating a custom 404 page for your GitHub Pages site</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://imgur.com/Lg9AMHO.png&quot; alt=&quot;404-page&quot;&gt;&lt;br&gt;&lt;small class=&quot;img-descript&quot;&gt;本站的 404 page&lt;/small&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>利用 Github + Hexo 來建 blog</title>
    <link href="http://yoursite.com/2016/07/28/construct-hexo-with-github/"/>
    <id>http://yoursite.com/2016/07/28/construct-hexo-with-github/</id>
    <published>2016-07-28T02:20:39.000Z</published>
    <updated>2016-11-16T10:15:31.319Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-安裝-Github-Desktop"><a href="#1-安裝-Github-Desktop" class="headerlink" title="1. 安裝 Github Desktop"></a>1. 安裝 <a href="https://desktop.github.com/" target="_blank" rel="external">Github Desktop</a></h1><p>優點</p>
<ul>
<li>在 Windows 環境下使用</li>
<li>可以自動建立 SSH Keys</li>
</ul>
<div class="tip"><br>    裝純粹 Git 的話需要自己手動建立 SSH Key<br></div>

<a id="more"></a>
<h1 id="2-安裝-Node-js"><a href="#2-安裝-Node-js" class="headerlink" title="2. 安裝 Node.js"></a>2. 安裝 <a href="https://nodejs.org/en/" target="_blank" rel="external">Node.js</a></h1><p>照著安裝步驟走就好，沒啥好說的。</p>
<h1 id="3-選擇-Git-Shell-類型"><a href="#3-選擇-Git-Shell-類型" class="headerlink" title="3. 選擇 Git Shell 類型"></a>3. 選擇 Git Shell 類型</h1><ol>
<li>打開 Github Desktop</li>
<li>設定 &gt; options &gt; Default Shell &gt; 選擇 <code>Git Bash</code> <div class="tip"><br>     步驟2可不做，我挑 Git Bash 只是因為介面比較順眼而已XD<br> </div></li>
<li>設定 &gt; Open in Git shell</li>
<li>然後 Github Desktop 就可以功成身退惹</li>
</ol>
<div class="tip"><br>    這個 Git shell 只是 GitHub Desktop 由指令建出來的捷徑，並沒有實體位置。<br>    真正的 <code>git.exe</code> 放在 <code>C:\Users\[username]\AppData\Local\GitHub\PortableGit_...\</code> 底下，<br>    需由此處才能右鍵以管理員身份開啟。<br>    若以管理員身份開啟 <code>git-bash.exe</code>，因為不是透過 GitHub Desktop 打開的，<br>    它不會記得你的身分認證，在做 push 的時候會需要重新輸入帳號密碼。<br></div>


<h1 id="4-建立-Hexo-環境"><a href="#4-建立-Hexo-環境" class="headerlink" title="4. 建立 Hexo 環境"></a>4. 建立 Hexo 環境</h1><ol>
<li><p>安裝 Hexo</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo-cli 	<span class="comment"># 安裝 Hexo</span></div><div class="line">$ hexo init &lt;folder&gt; 		<span class="comment"># 在指定資料夾中建立所需文件</span></div><div class="line">$ <span class="built_in">cd</span> &lt;folder&gt;			<span class="comment"># 移至指定資料夾</span></div><div class="line">$ npm install			<span class="comment"># 安裝 Hexo plugin</span></div></pre></td></tr></table></figure>
</li>
<li><p>Hello World!</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server 	<span class="comment"># = hexo s, 進行 compile</span></div></pre></td></tr></table></figure>
<p> 到這邊基本已經安裝好 hexo 了，可以在執行上述指令後到 <code>http://localhost:4000</code> 檢視基本頁面。</p>
</li>
<li><p>設定 hexo 根目錄下的 <code>_config.yml</code></p>
 <figure class="highlight bash"><figcaption><span><hexo-root>/_config.yml</hexo-root></span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 選擇主題</span></div><div class="line">theme: theme-name</div><div class="line"></div><div class="line"><span class="comment"># 設定要 deploy 到 github repo</span></div><div class="line">deploy:</div><div class="line">    <span class="built_in">type</span>: git</div><div class="line">    repo: git@github.com:[your_account]/[your_account].github.io.git</div><div class="line">    branch: master</div></pre></td></tr></table></figure>
</li>
<li><p>設置 <a href="https://pages.github.com/" target="_blank" rel="external">Github pages</a></p>
 <div class="tip"><br>     需要在 Github 上開一個名為 <code>[your_account].github.io</code> 的 repo，這樣在推出去之後網頁(<code>http://[your_account].github.io</code>)才會動。<br> </div>
</li>
<li><p>產生靜態網頁並推到 github 上</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ hexo generate <span class="comment"># = hexo g, 建立 publish 檔案</span></div><div class="line">$ hexo deploy	<span class="comment"># = hexo d, 將 publish 的檔案推到第二點設定的 repo 上</span></div></pre></td></tr></table></figure>
<p> 接下來就可以到 <code>http://[your_account].github.io</code> 檢視成果囉～</p>
</li>
</ol>
<h1 id="5-進階設定"><a href="#5-進階設定" class="headerlink" title="5. 進階設定"></a>5. 進階設定</h1><div class="tip"><br>若此處項目連結失效可至 <a href="/tags/hexo/">#Hexo</a> 搜尋該主題<br></div>

<ol>
<li><p><a href="https://thisis577.github.io/2016/07/27/keep-hexo-source-in-github/" target="_blank" rel="external">把 Hexo 原始碼也放到 github 遠端保存</a></p>
<p> 延伸: 在別的地方 clone 既有的 hexo repo</p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># clone repo 到指定目錄</span></div><div class="line">$ git <span class="built_in">clone</span> http://github.com/[your_account]/[your_account].github.io target_dir</div><div class="line"><span class="comment"># 切換到保存 hexo 原始碼的 branch</span></div><div class="line">$ git checkout hexo_branch</div><div class="line"><span class="comment"># 將該裝的東西都裝一裝</span></div><div class="line">$ npm install</div></pre></td></tr></table></figure>
</li>
<li><p><a href="https://thisis577.github.io/2016/07/28/modify-hexo-themes/" target="_blank" rel="external">修改 Hexo 主題</a></p>
<p> 若遇到 deploy 完 style 卻不對的情況: <a href="https://github.com/hexojs/hexo/issues/579" target="_blank" rel="external">(deploy后style.css不对)</a></p>
 <figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Make theme changes &amp; deploy</span></div><div class="line">$ hexo clean</div><div class="line">$ hexo generate</div><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;1-安裝-Github-Desktop&quot;&gt;&lt;a href=&quot;#1-安裝-Github-Desktop&quot; class=&quot;headerlink&quot; title=&quot;1. 安裝 Github Desktop&quot;&gt;&lt;/a&gt;1. 安裝 &lt;a href=&quot;https://desktop.github.com/&quot;&gt;Github Desktop&lt;/a&gt;&lt;/h1&gt;&lt;p&gt;優點&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 Windows 環境下使用&lt;/li&gt;
&lt;li&gt;可以自動建立 SSH Keys&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;    裝純粹 Git 的話需要自己手動建立 SSH Key&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>修改 Hexo 主題</title>
    <link href="http://yoursite.com/2016/07/28/modify-hexo-themes/"/>
    <id>http://yoursite.com/2016/07/28/modify-hexo-themes/</id>
    <published>2016-07-28T01:25:44.000Z</published>
    <updated>2016-07-29T09:51:00.965Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不是秘技的秘技"><a href="#不是秘技的秘技" class="headerlink" title="不是秘技的秘技"></a>不是秘技的秘技</h1><p>將 themes 資料夾複製一份出來，這樣就可以自由修改la~ O_&lt;</p>
<div class="tip"><br><div>記得將 themes 資料夾底下的 .git 資料夾砍掉</div><br><div><code>(Windows 檢視需開啟隱藏資料夾才看得到)</code></div><br><code>這樣自己的 git 才 track 到 themes 底下的所有變更</code><br></div>

<a id="more"></a>
<hr>
<h1 id="很難懂的-Jade"><a href="#很難懂的-Jade" class="headerlink" title="很難懂的 Jade"></a>很難懂的 Jade</h1><p>Hexo-theme-apollo 模版是以 <code>Jade</code> 寫的，與官方使用的 <code>ejs</code> 不同<br>但只需要另外安裝 <code>Jade</code> 外掛 <a href="https://github.com/hexojs/hexo-renderer-jade" target="_blank" rel="external">hexo-render-jade</a></p>
<h2 id="其實只需要一行指令"><a href="#其實只需要一行指令" class="headerlink" title="其實只需要一行指令"></a>其實只需要一行指令</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安裝 Jade 外掛</span></div><div class="line">npm install hexo-renderer-jade --save</div></pre></td></tr></table></figure>
<p>如此一來只要下 <code>hexo server</code> 就會自動幫你 compile<br>也可以另外插入 css 去修改了</p>
<div class="tip"><br>    凡是有修改 <code>*.jade</code> 建議關掉重開 hexo 比較好，以確保有吃到變更。<br></div>

<p>jade theme 寫法參考: <a href="https://github.com/saintwinkle/hexo-theme-pure" target="_blank" rel="external">hexo-theme-pure</a></p>
<hr>
<h1 id="編譯-SASS"><a href="#編譯-SASS" class="headerlink" title="編譯 SASS"></a>編譯 SASS</h1><h2 id="在-themes-底下安裝-gulp"><a href="#在-themes-底下安裝-gulp" class="headerlink" title="在 themes 底下安裝 gulp"></a>在 themes 底下安裝 gulp</h2><figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">cd themes/[your-themes]</div><div class="line"><span class="comment"># 裝 themes 裡面的 package</span></div><div class="line">npm install</div><div class="line"><span class="comment"># 裝 gulp</span></div><div class="line">npm install gulp -g</div><div class="line">npm install gulp-sass</div></pre></td></tr></table></figure>
<p><small class="murmur"><br>    因為我在 themes 底下裝一直會噴 Error: EMFILE, too many open files 的錯誤，<br>    所以我乾脆把 gulp 裝在 root 底下<br></small></p>
<figure class="highlight"><figcaption><span>/package.json</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">"dependencies": &#123;</div><div class="line">    "gulp": "^3.9.0",</div><div class="line">    "gulp-autoprefixer": "^3.0.2",</div><div class="line">    "gulp-sass": "^2.0.4",</div><div class="line">    "gulp-sourcemaps": "^1.6.0"</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight yml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 直接用 npm 裝一次</span></div><div class="line">npm install</div></pre></td></tr></table></figure>
<h2 id="編輯-gulpfile-js-此處改自hexo-theme-apollo"><a href="#編輯-gulpfile-js-此處改自hexo-theme-apollo" class="headerlink" title="編輯 gulpfile.js (此處改自hexo-theme-apollo)"></a>編輯 <code>gulpfile.js</code> (此處改自<a href="https://github.com/pinggod/hexo-theme-apollo/blob/master/gulpfile.js" target="_blank" rel="external">hexo-theme-apollo</a>)</h2><figure class="highlight js"><figcaption><span>themes/[your-themes]/gulpfile.js</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">'gulp'</span>);</div><div class="line"><span class="keyword">var</span> sass = <span class="built_in">require</span>(<span class="string">'gulp-sass'</span>);</div><div class="line"><span class="keyword">var</span> autoprefixer = <span class="built_in">require</span>(<span class="string">'gulp-autoprefixer'</span>);</div><div class="line"></div><div class="line"><span class="comment">// 一次性編譯 Sass</span></div><div class="line">gulp.task(<span class="string">'sass'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    <span class="comment">// 原主題使用 scss, 因個人習慣新增 *.sass (多個 src 可用 array[] 方式塞入)</span></div><div class="line">    <span class="keyword">return</span> gulp.src([<span class="string">'./source/scss/*.scss'</span>, <span class="string">'./source/scss/*.sass'</span>])</div><div class="line">        .pipe(sass(&#123;outputStyle: <span class="string">'compressed'</span>&#125;))</div><div class="line">        .pipe(autoprefixer())</div><div class="line">        .pipe(gulp.dest(<span class="string">'./source/css'</span>));</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// 即時編譯</span></div><div class="line">gulp.task(<span class="string">'default'</span>, [<span class="string">'sass'</span>], <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">    gulp.watch(<span class="string">'./source/scss/_partial/*.scss'</span>, [<span class="string">'sass'</span>]);</div><div class="line">    <span class="comment">// 同時 watch scss &amp; sass</span></div><div class="line">    gulp.watch([<span class="string">'./source/scss/*.scss'</span>, <span class="string">'./source/scss/*.sass'</span>], [<span class="string">'sass'</span>]);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<figure class="highlight yml"><figcaption><span>themes/[your-themes]/</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 需在與 gulpfile 同一層才能跑</span></div><div class="line"><span class="comment"># 一次性編譯</span></div><div class="line">gulp sass</div><div class="line"><span class="comment"># 或者</span></div><div class="line"><span class="comment"># always watch</span></div><div class="line">gulp</div></pre></td></tr></table></figure>
<hr>
<h1 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h1><p>需安裝 <code>hexo-generate-tags</code></p>
<div class="tip"><br>    注意 tag 大小寫，會造成資料夾目錄連不進去<br></div>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;不是秘技的秘技&quot;&gt;&lt;a href=&quot;#不是秘技的秘技&quot; class=&quot;headerlink&quot; title=&quot;不是秘技的秘技&quot;&gt;&lt;/a&gt;不是秘技的秘技&lt;/h1&gt;&lt;p&gt;將 themes 資料夾複製一份出來，這樣就可以自由修改la~ O_&amp;lt;&lt;/p&gt;
&lt;div class=&quot;tip&quot;&gt;&lt;br&gt;&lt;div&gt;記得將 themes 資料夾底下的 .git 資料夾砍掉&lt;/div&gt;&lt;br&gt;&lt;div&gt;&lt;code&gt;(Windows 檢視需開啟隱藏資料夾才看得到)&lt;/code&gt;&lt;/div&gt;&lt;br&gt;&lt;code&gt;這樣自己的 git 才 track 到 themes 底下的所有變更&lt;/code&gt;&lt;br&gt;&lt;/div&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="gulp" scheme="http://yoursite.com/tags/gulp/"/>
    
      <category term="jade" scheme="http://yoursite.com/tags/jade/"/>
    
      <category term="SASS" scheme="http://yoursite.com/tags/SASS/"/>
    
  </entry>
  
</feed>
